/**
 * OpenAPI Template
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ErrorResponse
 */
export interface ErrorResponse {
    /**
     * The HTTP status code.
     * @type {number}
     * @memberof ErrorResponse
     */
    code: number;
    /**
     * The details of the error.
     * @type {string}
     * @memberof ErrorResponse
     */
    detail?: string;
    /**
     * The error message.
     * @type {string}
     * @memberof ErrorResponse
     */
    error: ErrorResponseErrorEnum;
}
export declare const ErrorResponseErrorEnum: {
    readonly BadRequest: "Bad Request";
    readonly FileExpired: "File Expired";
    readonly Forbidden: "Forbidden";
    readonly ResourceLocked: "Resource Locked";
    readonly FormatNotSupported: "Format Not Supported";
    readonly InternalServerError: "Internal Server Error";
    readonly JobError: "Job error";
    readonly JobExpired: "Job Expired";
    readonly JobInProgress: "Job In Progress";
    readonly JobIsNotOfTypeAlignment: "Job is not of type alignment";
    readonly JobIsNotOfTypeTranscription: "Job is not of type transcription";
    readonly JobNotFound: "Job not found";
    readonly JobRejected: "Job rejected";
    readonly JobRejectedDueToInvalidAudio: "Job rejected due to invalid audio";
    readonly JobRejectedDueToInvalidText: "Job rejected due to invalid text";
    readonly MalformedRequest: "Malformed request";
    readonly MissingCallback: "Missing callback";
    readonly MissingDataFile: "Missing data_file";
    readonly MissingTextFile: "Missing text_file";
    readonly NoLanguageSelected: "No language selected";
    readonly NotImplemented: "Not Implemented";
    readonly PermissionDenied: "Permission Denied";
    readonly RequestedProductNotAvailable: "Requested product not available";
    readonly TranscriptionNotReady: "Transcription not ready";
    readonly LogFileNotAvailable: "Log file not available";
    readonly RequestedEarlyAccessReleaseNotAvailable: "Requested Early Access Release not available";
    readonly UnprocessableEntity: "Unprocessable Entity";
};
export type ErrorResponseErrorEnum = typeof ErrorResponseErrorEnum[keyof typeof ErrorResponseErrorEnum];

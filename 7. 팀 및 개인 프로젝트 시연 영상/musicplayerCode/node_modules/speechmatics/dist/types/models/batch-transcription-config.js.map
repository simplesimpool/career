{
  "version": 3,
  "sources": ["../../../src/types/models/batch-transcription-config.ts"],
  "sourcesContent": ["/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAPI Template\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n// May contain unused imports in some cases\n// @ts-ignore\nimport { BatchTranscriptionConfigAdditionalVocabInner } from './batch-transcription-config-additional-vocab-inner';\n// May contain unused imports in some cases\n// @ts-ignore\nimport { BatchTranscriptionConfigAudioFilteringConfig } from './batch-transcription-config-audio-filtering-config';\n// May contain unused imports in some cases\n// @ts-ignore\nimport { BatchTranscriptionConfigPunctuationOverrides } from './batch-transcription-config-punctuation-overrides';\n// May contain unused imports in some cases\n// @ts-ignore\nimport { BatchTranscriptionConfigSpeakerDiarizationConfig } from './batch-transcription-config-speaker-diarization-config';\n// May contain unused imports in some cases\n// @ts-ignore\nimport { OperatingPoint } from './operating-point';\n\n/**\n *\n * @export\n * @interface BatchTranscriptionConfig\n */\nexport interface BatchTranscriptionConfig {\n  /**\n   * List of custom words or phrases that should be recognized. Alternative pronunciations can be specified to aid recognition.\n   * @type {Array<BatchTranscriptionConfigAdditionalVocabInner>}\n   * @memberof BatchTranscriptionConfig\n   */\n  additional_vocab?: Array<BatchTranscriptionConfigAdditionalVocabInner>;\n  /**\n   *\n   * @type {BatchTranscriptionConfigAudioFilteringConfig}\n   * @memberof BatchTranscriptionConfig\n   */\n  audio_filtering_config?: BatchTranscriptionConfigAudioFilteringConfig;\n  /**\n   * Transcript labels to use when using collating separate input channels.\n   * @type {Array<string>}\n   * @memberof BatchTranscriptionConfig\n   */\n  channel_diarization_labels?: Array<string>;\n  /**\n   * Specify whether speaker or channel labels are added to the transcript. The default is `none`.   - **none**: no speaker or channel labels are added.   - **speaker**: speaker attribution is performed based on acoustic matching;              all input channels are mixed into a single stream for processing.   - **channel**: multiple input channels are processed individually and collated             into a single transcript.   - **speaker_change**: the output indicates when the speaker in the audio changes.                     No speaker attribution is performed. This is a faster method                     than speaker. The reported speaker changes may not agree with speaker.   - **channel_and_speaker_change**: both channel and speaker_change are switched on.                                 The speaker change is indicated if more than one speaker                                 are recorded in one channel.\n   * @type {string}\n   * @memberof BatchTranscriptionConfig\n   */\n  diarization?: BatchTranscriptionConfigDiarizationEnum;\n  /**\n   * Request a specialized model based on \\'language\\' but optimized for a particular field, e.g. \\\"finance\\\" or \\\"medical\\\".\n   * @type {string}\n   * @memberof BatchTranscriptionConfig\n   */\n  domain?: string;\n  /**\n   * Include additional \\'entity\\' objects in the transcription results (e.g. dates, numbers) and their original spoken form. These entities are interleaved with other types of results. The concatenation of these words is represented as a single entity with the concatenated written form present in the \\'content\\' field. The entities contain a \\'spoken_form\\' field, which can be used in place of the corresponding \\'word\\' type results, in case a spoken form is preferred to a written form. They also contain a \\'written_form\\', which can be used instead of the entity, if you want a breakdown of the words without spaces. They can still contain non-breaking spaces and other special whitespace characters, as they are considered part of the word for the formatting output. In case of a written_form, the individual word times are estimated and might not be accurate if the order of the words in the written form does not correspond to the order they were actually spoken (such as \\'one hundred million dollars\\' and \\'$100 million\\').\n   * @type {boolean}\n   * @memberof BatchTranscriptionConfig\n   */\n  enable_entities?: boolean;\n  /**\n   * Language model to process the audio input, normally specified as an ISO language code\n   * @type {string}\n   * @memberof BatchTranscriptionConfig\n   */\n  language: string;\n  /**\n   * Whether or not to enable flexible endpointing and allow the entity to continue to be spoken.\n   * @type {string}\n   * @memberof BatchTranscriptionConfig\n   */\n  max_delay_mode?: BatchTranscriptionConfigMaxDelayModeEnum;\n  /**\n   *\n   * @type {OperatingPoint}\n   * @memberof BatchTranscriptionConfig\n   */\n  operating_point?: OperatingPoint;\n  /**\n   * Language locale to be used when generating the transcription output, normally specified as an ISO language code\n   * @type {string}\n   * @memberof BatchTranscriptionConfig\n   */\n  output_locale?: string;\n  /**\n   *\n   * @type {BatchTranscriptionConfigPunctuationOverrides}\n   * @memberof BatchTranscriptionConfig\n   */\n  punctuation_overrides?: BatchTranscriptionConfigPunctuationOverrides;\n  /**\n   * Ranges between zero and one. Controls how responsive the system is for potential speaker changes. High value indicates high sensitivity. Defaults to 0.4.\n   * @type {number}\n   * @memberof BatchTranscriptionConfig\n   */\n  speaker_change_sensitivity?: number;\n  /**\n   *\n   * @type {BatchTranscriptionConfigSpeakerDiarizationConfig}\n   * @memberof BatchTranscriptionConfig\n   */\n  speaker_diarization_config?: BatchTranscriptionConfigSpeakerDiarizationConfig;\n}\n\nexport const BatchTranscriptionConfigDiarizationEnum = {\n  None: 'none',\n  Speaker: 'speaker',\n  Channel: 'channel',\n  SpeakerChange: 'speaker_change',\n  ChannelAndSpeakerChange: 'channel_and_speaker_change',\n} as const;\n\nexport type BatchTranscriptionConfigDiarizationEnum =\n  typeof BatchTranscriptionConfigDiarizationEnum[keyof typeof BatchTranscriptionConfigDiarizationEnum];\nexport const BatchTranscriptionConfigMaxDelayModeEnum = {\n  Fixed: 'fixed',\n  Flexible: 'flexible',\n} as const;\n\nexport type BatchTranscriptionConfigMaxDelayModeEnum =\n  typeof BatchTranscriptionConfigMaxDelayModeEnum[keyof typeof BatchTranscriptionConfigMaxDelayModeEnum];\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoHO,MAAM,0CAA0C;AAAA,EACrD,MAAM;AAAA,EACN,SAAS;AAAA,EACT,SAAS;AAAA,EACT,eAAe;AAAA,EACf,yBAAyB;AAC3B;AAIO,MAAM,2CAA2C;AAAA,EACtD,OAAO;AAAA,EACP,UAAU;AACZ;",
  "names": []
}

{
  "version": 3,
  "sources": ["../../src/config/connection.ts"],
  "sourcesContent": ["export class ConnectionConfigFull implements ConnectionConfig {\n  apiKey: string | (() => Promise<string>);\n  batchUrl = 'https://asr.api.speechmatics.com/v2';\n  realtimeUrl = 'wss://eu2.rt.speechmatics.com/v2';\n  managementPlatformUrl = 'https://mp.speechmatics.com/v1';\n  appId?: string;\n\n  constructor(config: string | ConnectionConfig) {\n    if (typeof config === 'string') {\n      this.apiKey = config;\n    } else {\n      this.apiKey = config.apiKey;\n      if (config.batchUrl) this.batchUrl = config.batchUrl;\n      if (config.realtimeUrl) this.realtimeUrl = config.realtimeUrl;\n      if (config.managementPlatformUrl)\n        this.managementPlatformUrl = config.managementPlatformUrl;\n      if (config.apiKey) this.apiKey = config.apiKey;\n      this.appId = config.appId;\n    }\n  }\n}\n\nexport interface ConnectionConfig {\n  apiKey: string | (() => Promise<string>);\n  batchUrl?: string;\n  realtimeUrl?: string;\n  managementPlatformUrl?: string;\n  appId?: string;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,qBAAiD;AAAA,EAO5D,YAAY,QAAmC;AAL/C,oBAAW;AACX,uBAAc;AACd,iCAAwB;AAItB,QAAI,OAAO,WAAW,UAAU;AAC9B,WAAK,SAAS;AAAA,IAChB,OAAO;AACL,WAAK,SAAS,OAAO;AACrB,UAAI,OAAO;AAAU,aAAK,WAAW,OAAO;AAC5C,UAAI,OAAO;AAAa,aAAK,cAAc,OAAO;AAClD,UAAI,OAAO;AACT,aAAK,wBAAwB,OAAO;AACtC,UAAI,OAAO;AAAQ,aAAK,SAAS,OAAO;AACxC,WAAK,QAAQ,OAAO;AAAA,IACtB;AAAA,EACF;AACF;",
  "names": []
}

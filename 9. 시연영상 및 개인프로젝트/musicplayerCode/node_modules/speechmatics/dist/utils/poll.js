"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var poll_exports = {};
__export(poll_exports, {
  default: () => poll
});
module.exports = __toCommonJS(poll_exports);
function poll(cb, interval = 500, timeout = 60 * 1e3) {
  return new Promise((resolve, reject) => {
    let pollInterval = void 0;
    const errTimeout = setTimeout(() => {
      typeof pollInterval !== "undefined" && clearInterval(pollInterval);
      reject(new Error(`Exceeded timeout of ${timeout} ms`));
    }, timeout);
    pollInterval = setInterval(() => {
      cb().then((resolved) => {
        if (resolved) {
          clearTimeout(errTimeout);
          clearInterval(pollInterval);
          resolve();
        }
      }).catch((err) => {
        clearTimeout(errTimeout);
        clearInterval(pollInterval);
        reject(err);
      });
    }, interval);
  });
}
//# sourceMappingURL=poll.js.map

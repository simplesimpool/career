import {
  CreateJobResponse,
  RetrieveTranscriptResponse,
  RetrieveJobResponse,
  DeleteJobResponse,
  RetrieveJobsResponse,
  JobConfig,
  DataFetchConfig,
  BatchTranscriptionConfig,
} from '../types';
import { ConnectionConfig } from '../config/connection';
import RetrieveJobsFilters from '../types/list-job-filters';
import { BatchFeatureDiscovery } from '../types/batch-feature-discovery';
export declare class BatchTranscription {
  private config;
  private _apiKey;
  get apiKey(): string | undefined;
  refreshApiKey(): Promise<string>;
  constructor(config: string | ConnectionConfig);
  private refreshOnAuthFail;
  private get;
  private post;
  private delete;
  /**
   * The main method for transcribing audio files. It takes a url or a buffer and returns a promise with a transcript.
   *
   *
   * @param config TranscribeConfig
   * @returns Promise<RetrieveTranscriptResponse>. A promise that resolves to a transcript.
   */
  transcribe(
    input: JobInput,
    jobConfig: Parameters<typeof this.createTranscriptionJob>[1],
    format?: TranscriptionFormat,
  ): Promise<RetrieveTranscriptResponse | string>;
  createTranscriptionJob(
    input: JobInput,
    jobConfig: CreateJobConfig,
  ): Promise<CreateJobResponse>;
  listJobs(filters?: RetrieveJobsFilters): Promise<RetrieveJobsResponse>;
  getJob(id: string): Promise<RetrieveJobResponse>;
  deleteJob(id: string, force?: boolean): Promise<DeleteJobResponse>;
  getJobResult(jobId: string): Promise<RetrieveTranscriptResponse>;
  getJobResult(
    jobId: string,
    format: 'json-v2',
  ): Promise<RetrieveTranscriptResponse>;
  getJobResult(jobId: string, format: 'text' | 'srt'): Promise<string>;
  getJobResult(
    jobId: string,
    format?: TranscriptionFormat,
  ): Promise<RetrieveTranscriptResponse | string>;
  getDataFile(jobId: string): Promise<unknown>;
  getFeatureDiscovery(): Promise<BatchFeatureDiscovery>;
}
export type TranscriptionFormat = 'json-v2' | 'text' | 'srt';
export type JobInput =
  | File
  | {
      data: Blob;
      fileName: string;
    }
  | DataFetchConfig;
type CreateJobConfig = Omit<JobConfig, 'type' | 'fetch_data'> & {
  transcription_config: BatchTranscriptionConfig;
};
export {};

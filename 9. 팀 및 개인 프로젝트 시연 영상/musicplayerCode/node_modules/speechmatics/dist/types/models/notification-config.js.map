{
  "version": 3,
  "sources": ["../../../src/types/models/notification-config.ts"],
  "sourcesContent": ["/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAPI Template\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n * @interface NotificationConfig\n */\nexport interface NotificationConfig {\n  /**\n   * A list of additional headers to be added to the notification request when using http or https. This is intended to support authentication or authorization, for example by supplying an OAuth2 bearer token.\n   * @type {Array<string>}\n   * @memberof NotificationConfig\n   */\n  auth_headers?: Array<string>;\n  /**\n   * Specifies a list of items to be attached to the notification message. When multiple items are requested, they are included as named file attachments.\n   * @type {Array<string>}\n   * @memberof NotificationConfig\n   */\n  contents?: Array<NotificationConfigContentsEnum>;\n  /**\n   * The method to be used with http and https urls. The default is post.\n   * @type {string}\n   * @memberof NotificationConfig\n   */\n  method?: NotificationConfigMethodEnum;\n  /**\n   * The url to which a notification message will be sent upon completion of the job. The job `id` and `status` are added as query parameters, and any combination of the job inputs and outputs can be included by listing them in `contents`.  If `contents` is empty, the body of the request will be empty.  If only one item is listed, it will be sent as the body of the request with `Content-Type` set to an appropriate value such as `application/octet-stream` or `application/json`.  If multiple items are listed they will be sent as named file attachments using the multipart content type.  If `contents` is not specified, the `transcript` item will be sent as a file attachment named `data_file`, for backwards compatibility.  If the job was rejected or failed during processing, that will be indicated by the status, and any output items that are not available as a result will be omitted. The body formatting rules will still be followed as if all items were available.  The user-agent header is set to `Speechmatics-API/2.0`, or `Speechmatics API V2` in older API versions.\n   * @type {string}\n   * @memberof NotificationConfig\n   */\n  url: string;\n}\n\nexport const NotificationConfigContentsEnum = {\n  Jobinfo: 'jobinfo',\n  Transcript: 'transcript',\n  TranscriptJsonV2: 'transcript.json-v2',\n  TranscriptTxt: 'transcript.txt',\n  TranscriptSrt: 'transcript.srt',\n  Alignment: 'alignment',\n  AlignmentWordStartAndEnd: 'alignment.word_start_and_end',\n  AlignmentOnePerLine: 'alignment.one_per_line',\n  Data: 'data',\n  Text: 'text',\n} as const;\n\nexport type NotificationConfigContentsEnum =\n  typeof NotificationConfigContentsEnum[keyof typeof NotificationConfigContentsEnum];\nexport const NotificationConfigMethodEnum = {\n  Post: 'post',\n  Put: 'put',\n} as const;\n\nexport type NotificationConfigMethodEnum =\n  typeof NotificationConfigMethodEnum[keyof typeof NotificationConfigMethodEnum];\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CO,MAAM,iCAAiC;AAAA,EAC5C,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,kBAAkB;AAAA,EAClB,eAAe;AAAA,EACf,eAAe;AAAA,EACf,WAAW;AAAA,EACX,0BAA0B;AAAA,EAC1B,qBAAqB;AAAA,EACrB,MAAM;AAAA,EACN,MAAM;AACR;AAIO,MAAM,+BAA+B;AAAA,EAC1C,MAAM;AAAA,EACN,KAAK;AACP;",
  "names": []
}
